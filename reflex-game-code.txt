const int startBtn = 13;
bool startBtnState = LOW;
bool gameBegin = false;

const int leftBtn = 7;
const int centerBtn = 6;
const int rightBtn = 5;
bool leftBtnState = LOW;
bool centerBtnState = LOW;
bool rightBtnState = LOW;

int randomNumber;
int score;

const int leftLed = 10;
const int centerLed = 9;
const int rightLed = 8;

int reactionDelay;

void setup() {
  Serial.begin(9600);
  pinMode(startBtn, INPUT);
  pinMode(leftBtn, INPUT);
  pinMode(centerBtn, INPUT);
  pinMode(rightBtn, INPUT);
  pinMode(leftLed, OUTPUT);
  pinMode(centerLed, OUTPUT);
  pinMode(rightLed, OUTPUT);
}

void loop() {
  bool startBtnDebounce = debounce(startBtn, startBtnState);
  if (startBtnDebounce == HIGH && startBtnState == LOW) {
    startBtnState = HIGH;
    Serial.println("Started game!");
    gameBegin = true;
    score = 0;
  } else if (startBtnDebounce == LOW && startBtnState == HIGH) {
    startBtnState = LOW;
  }

  if (gameBegin) {
    startGame();
  }
}

void startGame() {
  bool continueGame = true;
  reactionDelay = 1000;

  randomNumber = random(5, 8);

  switch (randomNumber) {
    case 5:
      digitalWrite(leftLed, HIGH);
      Serial.println("Press 5");
      break;
    case 6:
      digitalWrite(centerLed, HIGH);
      Serial.println("Press 6");
      break;
    case 7:
      digitalWrite(rightLed, HIGH);
      Serial.println("Press 7");
      break;
  }

  delay(200);

  unsigned long startTime = millis();
  unsigned long elapsedTime = 0;

  while (elapsedTime < reactionDelay) {
    elapsedTime = millis() - startTime;
    if (elapsedTime >= reactionDelay && continueGame) {
      ledGameOver();
      gameBegin = false;
      Serial.println("You failed to press the correct button in time. Game over!");
      break;
    } else {
      bool leftBtnDebounce = debounce(leftBtn, leftBtnState);
      bool centerBtnDebounce = debounce(centerBtn, centerBtnState);
      bool rightBtnDebounce = debounce(rightBtn, rightBtnState);

      if (randomNumber == 5) {
        if (leftBtnDebounce == HIGH && leftBtnState == LOW) {
          leftBtnState = HIGH;
          Serial.println("Correct press!");
          score++;
          turnOffLeds();
          delay(reactionDelay);
          break;
        } else if (leftBtnDebounce == LOW && leftBtnState == HIGH) {
          leftBtnState = LOW;
        }

        if (centerBtnDebounce == HIGH && centerBtnState == LOW) {
          centerBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (centerBtnDebounce == LOW && centerBtnState == HIGH) {
          centerBtnState = LOW;
        }

        if (rightBtnDebounce == HIGH && rightBtnState == LOW) {
          rightBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (rightBtnDebounce == LOW && rightBtnState == HIGH) {
          rightBtnState = LOW;
        }
      }

      if (randomNumber == 6) {
        if (leftBtnDebounce == HIGH && leftBtnState == LOW) {
          leftBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (leftBtnDebounce == LOW && leftBtnState == HIGH) {
          leftBtnState = LOW;
        }

        if (centerBtnDebounce == HIGH && centerBtnState == LOW) {
          centerBtnState = HIGH;
          Serial.println("Correct press!");
          score++;
          turnOffLeds();
          delay(reactionDelay);
          break;
        } else if (centerBtnDebounce == LOW && centerBtnState == HIGH) {
          centerBtnState = LOW;
        }

        if (rightBtnDebounce == HIGH && rightBtnState == LOW) {
          rightBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (rightBtnDebounce == LOW && rightBtnState == HIGH) {
          rightBtnState = LOW;
        }
      }

      if (randomNumber == 7) {
        if (leftBtnDebounce == HIGH && leftBtnState == LOW) {
          leftBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (leftBtnDebounce == LOW && leftBtnState == HIGH) {
          leftBtnState = LOW;
        }

        if (centerBtnDebounce == HIGH && centerBtnState == LOW) {
          centerBtnState = HIGH;
          Serial.println("Wrong press!");
          ledGameOver();
          break;
        } else if (centerBtnDebounce == LOW && centerBtnState == HIGH) {
          centerBtnState = LOW;
        }

        if (rightBtnDebounce == HIGH && rightBtnState == LOW) {
          rightBtnState = HIGH;
          Serial.println("Correct press!");
          score++;
          turnOffLeds();
          delay(reactionDelay);
          break;
        } else if (rightBtnDebounce == LOW && rightBtnState == HIGH) {
          rightBtnState = LOW;
        }
      }
    }
  }
  if (score % 10 == 0 && score != 0) {
    reactionDelay -= 300;
    Serial.println(reactionDelay);
    delay(500);
    ledNewDelay();
    delay(2000);
  }
}

bool debounce(int btn, bool state) {
  bool stateNow = digitalRead(btn);
  if (state != stateNow) {
    delay(10);
    stateNow = digitalRead(btn);
  }
  return stateNow;
}

void turnOnLeds() {
  digitalWrite(leftLed, HIGH);
  digitalWrite(centerLed, HIGH);
  digitalWrite(rightLed, HIGH);
}

void turnOffLeds() {
  digitalWrite(leftLed, LOW);
  digitalWrite(centerLed, LOW);
  digitalWrite(rightLed, LOW);
}

void ledGameOver() {
  turnOffLeds();
  for (int i = 0; i < 3; i++) {
    turnOnLeds();
    delay(300);
    turnOffLeds();
    delay(300);
  }
  gameBegin = false;
  Serial.println("Score: " + String(score));
}

void ledNewDelay() {
  turnOffLeds();
  digitalWrite(leftLed, HIGH);
  delay(200);
  digitalWrite(centerLed, HIGH);
  delay(200);
  digitalWrite(rightLed, HIGH);
  delay(800);
  turnOffLeds();
}

void checkStartButton() {
  bool startBtnDebounce = debounce(startBtn, startBtnState);
  if (startBtnDebounce == HIGH && startBtnState == LOW) {
    startBtnState = HIGH;
    Serial.println("Started game!");
    gameBegin = true;
  } else if (startBtnDebounce == LOW && startBtnState == HIGH) {
    startBtnState = LOW;
  }
}
